rm(list = ls())
library(languageR)
library(lme4)
library(lattice)
library(Matrix)
library(ggplot2)
library(dplyr)
## a) We will first look at the dataset ChickWeight, which is already
##    loaded in base R. Check out the help page of the data set to understand
##    how the data was collected and look at the summary.
help(ChickWeight)
summary(ChickWeight)
library(Rmisc)
install.packages("Rmisc")
library(Rmisc)
?summarySE()
aggData <- summarySE(data = ChickWeight, groupvars = c("Diet", "Time"))
aggData <- summarySE(data = ChickWeight, groupvars = c("Diet", "Time"))
aggData <- summarySE(data = ChickWeight,measurevar = "weight", groupvars = c("Diet", "Time"))
View(aggData)
##    2) Create a line plot of aggData, plotting weight on the y axis, time on the x-axis and color by Diet.
##       Also add errorbars (mean+/-1.96*se)
ggplot(aggData, aes(time, weight, color=Diet ))+geom_line()
View(aggData)
##    2) Create a line plot of aggData, plotting weight on the y axis, time on the x-axis and color by Diet.
##       Also add errorbars (mean+/-1.96*se)
ggplot(aggData, aes(Time, weight, color=Diet ))+geom_line()
##    2) Create a line plot of aggData, plotting weight on the y axis, time on the x-axis and color by Diet.
##       Also add errorbars (mean+/-1.96*se)
ggplot(aggData, aes(Time, weight, color = Diet)) + geom_line() + geom_errorbar()
ggplot(aggData, aes(Time, weight, color = Diet)) +
geom_line() +
geom_errorbar(ymin = weight - 1.96 * se, ymax = weight + 1.96 * se)
source("C:/Git Repos/statR_group_79/Sheet_8.r", echo=TRUE)
ggplot(aggData, aes(Time, weight, color = Diet)) +
geom_line() +
geom_errorbar(data = aggData,ymin = weight - 1.96 * se, ymax = weight + 1.96 * se)
source("C:/Git Repos/statR_group_79/Sheet_8.r", echo=TRUE)
ggplot(aggData, aes(Time, weight, color = Diet)) +
geom_line() +
geom_errorbar(ymin = aggData$weight - 1.96 * se, ymax = aggData$weight + 1.96 * se)
ggplot(aggData, aes(Time, weight, color = Diet)) +
geom_line() +
geom_errorbar(ymin = aggData$weight - 1.96 * aggData$se, ymax = aggData$weight + 1.96 * aggData$se)
summary(ChickWeight)
## c) The above plot ignored that the data comes from a fixed set of chicks. Let's look at individual growth
##    by coloring by Chick instead of by Diet, but faceting by Diet (side by side). You have to use ChickWeight
##    instead of aggData here! Also you don't need error bars, because you are not plotting the mean, but the
##    actual data
ggplot(ChickWeight, aes(Time, weight, color = Chick))+geom_line()+facet_wrap(Diet)
## c) The above plot ignored that the data comes from a fixed set of chicks. Let's look at individual growth
##    by coloring by Chick instead of by Diet, but faceting by Diet (side by side). You have to use ChickWeight
##    instead of aggData here! Also you don't need error bars, because you are not plotting the mean, but the
##    actual data
ggplot(ChickWeight, aes(Time, weight, color = Chick))+geom_line()+facet_wrap(aes(Diet))
## c) The above plot ignored that the data comes from a fixed set of chicks. Let's look at individual growth
##    by coloring by Chick instead of by Diet, but faceting by Diet (side by side). You have to use ChickWeight
##    instead of aggData here! Also you don't need error bars, because you are not plotting the mean, but the
##    actual data
ggplot(ChickWeight, aes(Time, weight, color = Chick))+geom_line()+facet_wrap(ChickWeight$Diet)
## f) Run the model you specified in e) using lmer() and assign it to chickmod
chickmod <- lmer(weight ~ (Time | Diet), data = ChickWeight)
chickmod <- lmer(weight ~ (Time | Diet), data = ChickWeight)
chickmod <- lmer(weight ~ (Time | Diet), data = ChickWeight)
elp('isSingular')
help('isSingular')
## f) Run the model you specified in e) using lmer() and assign it to chickmod
chickmod <- lmer(Time ~ (weight | Diet), data = ChickWeight)
chickmod
chickmod <- lmer(weight ~Time +  (1 | Diet), data = ChickWeight)
chickmod
## f) Run the model you specified in e) using lmer() and assign it to chickmod
chickmod <- lmer(weight ~  (1+Time | Diet), data = ChickWeight)
chickmod <- lmer(weight ~ Time +  (1 + Time |
Diet), data = ChickWeight)
summary(ChickWeight)
chickmod <- lmer(weight ~ Time +  (1 + Chick |
Diet), data = ChickWeight)
chickmod <- lmer(weight ~ Time +  (1 + Chick | Diet), data = ChickWeight)
## b) Let's plot the data.
##    1) Group the data by Diet and Time. Use a function summarySE()
##       from Rmisc library to get the mean and se of weight.
##       Assign resulting dataset to aggData.
library(Rmisc)
library(languageR)
library(lme4)
library(lattice)
library(Matrix)
library(ggplot2)
library(dplyr)
## f) Run the model you specified in e) using lmer() and assign it to chickmod
chickmod <- lmer(weight ~ Time +  (1 + Chick | Diet), data = ChickWeight)
## f) Run the model you specified in e) using lmer() and assign it to chickmod
chickmod <- lmer(weight ~ Time +  (1 + weight | Diet), data = ChickWeight)
## f) Run the model you specified in e) using lmer() and assign it to chickmod
chickmod <- lmer(weight ~ Time +  (1  | Diet), data = ChickWeight)
## f) Run the model you specified in e) using lmer() and assign it to chickmod
chickmod <- lmer(weight ~ Time * Diet +  (1  | Diet), data = ChickWeight)
## f) Run the model you specified in e) using lmer() and assign it to chickmod
chickmod <- lmer(weight ~ Time * Diet +  (1  | Chick), data = ChickWeight)
chickmod
## g) Rerun the model leaving out the interaction between Time and Diet and assign it to chicknull
chicknull <- lmer(weight ~ (1  | Chick), data = ChickWeight)
## h) compare the two models using the anova() function, which performs a likelihood ratio test
anova(chickmod, chicknull)
## j) The following code creates a plot of all chick specific intercepts and slopes. What do you see?
print(dotplot(ranef(chickmod, condVar = TRUE),  scales = list(x = list(relation = 'free')))[["Chick"]])
m1 = lmer(RT ~ PrevType + Complex + (PrevType        |
Subject) + (Complex | Word),
lexdec)
m2 = lmer(RT ~ PrevType + Complex + (PrevType + Complex |
Subject) + (PrevType        |
Word),
lexdec)
m3 = lmer(RT ~ PrevType + Complex + (PrevType + Complex |
Subject) + (PrevType + Complex |
Word),
lexdec)
m4 = lmer(RT ~ PrevType + Complex + (Complex |
Subject) + (PrevType        |
Word),
lexdec)
m5 = lmer(RT ~ PrevType + Complex + (PrevType + Complex |
Subject) + (1               |
Word),
lexdec)
## j) The following code creates a plot of all chick specific intercepts and slopes. What do you see?
print(dotplot(ranef(chickmod, condVar = TRUE),  scales = list(x = list(relation = 'free')))[["Chick"]])
